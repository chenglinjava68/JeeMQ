<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/task
                        http://www.springframework.org/schema/task/spring-task.xsd"
                          >
	<!-- 启用spring mvc 注解 -->
	<context:annotation-config />
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.stripcode" />
	<mvc:annotation-driven validator="validator" >
		<mvc:message-converters register-defaults="true">
			
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
					<property name="supportedMediaTypes" value="application/json;charset=UTF-8" />
					<property name="features">
						<array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
							<bean
								class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
								<property name="staticField"
									value="com.alibaba.fastjson.serializer.SerializerFeature.DisableCircularReferenceDetect" />
							</bean>
							<value>WriteMapNullValue</value>
							<value>WriteNullStringAsEmpty</value>
						</array>
					</property>
			</bean>

			<!--
			<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="serializationInclusion">
							<value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
						</property>
					</bean>
				</property>
			</bean>
			-->
			
		</mvc:message-converters>
	</mvc:annotation-driven>
	<mvc:resources mapping="/template/**" location="/WEB-INF/_template/_est/_xml/"/>
	<!-- I18N for Spring Application -->
	<bean id="messageSource"
		  class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:config/message</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="true" />
		<property name="cacheSeconds" value="3600" />
	</bean>
	<bean id="validator"
		  class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<property name="validationMessageSource" ref="messageSource" />

	</bean>
	<!-- 拦截器 -->
	<mvc:interceptors>
		<!-- 跨域访问参数设置-->
		<bean class="com.stripcode.core.interceptor.AccessControlAllowOriginInterceptor"></bean>
		<bean class="com.stripcode.core.interceptor.MaliciousRequestInterceptor">
			<property name="minRequestIntervalTime" value="1000" />
			<property name="maxMaliciousTimes" value="0" />
			<property name="nextInterceptor">
				<bean class="com.stripcode.core.interceptor.LocaleInterceptor" />
			</property>
		</bean>
	</mvc:interceptors>

	<bean id="localeResolver"
		  class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="zh_CN" />
	</bean>
	<!-- 配置JSP视图 -->
	<bean id="internalResourceViewResolver"
		  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<description>视图模式配置</description>
		<property name="viewClass"
				  value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="contentType" value="text/html;charset=UTF-8" />
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<!--<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<description>注解controller方法适配器</description>
		<property name="messageConverters">
			<list>
				&lt;!&ndash;JSON转换器 &ndash;&gt;
				<bean
					class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
					<property name="supportedMediaTypes" value="application/json;charset=UTF-8" />
					<property name="features">
						<array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
							<bean
								class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
								<property name="staticField"
									value="com.alibaba.fastjson.serializer.SerializerFeature.DisableCircularReferenceDetect" />
							</bean>
							<value>WriteMapNullValue</value>
							<value>WriteNullStringAsEmpty</value>
						</array>
					</property>
				</bean>
			</list>
		</property>
	</bean>-->
	<!-- 多部分文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600" />
		<property name="maxInMemorySize" value="4096" />
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	<!-- 资源重定向(仅作为后台使用不提供静态资源) -->
	<!-- <mvc:resources mapping="upload/**" location="/WEB-INF/resources/upload/" 
		cache-period="300" /> -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">failure</prop>
			</props>
		</property>
	</bean>

	<!-- Enables the Spring Task @Scheduled programming model -->
	<task:executor id="executor" pool-size="5" />
	<task:scheduler id="scheduler" pool-size="10" />  <!-- 任务调度器 -->
	<task:annotation-driven executor="executor" scheduler="scheduler" />

</beans>